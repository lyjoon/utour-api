<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.utour.mapper.HotelMapper">

    <resultMap id="resultMap" type="com.utour.entity.Hotel" extends="common.content.resultMap">
        <result javaType="java.lang.Long"  property="hotelId" column="HOTEL_ID" />
        <result javaType="java.lang.String"  property="nationCode" column="NATION_CODE" />
        <result javaType="java.lang.String"  property="areaCode" column="AREA_CODE" />
        <result javaType="java.lang.Character"  property="useYn" column="USE_YN" />
        <result javaType="java.lang.String"  property="hotelName" column="HOTEL_NAME" />
        <result javaType="java.lang.String"  property="hotelClass" column="HOTEL_CLASS" />
        <result javaType="java.lang.String"  property="hotelUrl" column="HOTEL_URL" />
        <result javaType="java.lang.String"  property="hotelContact" column="HOTEL_CONTACT" />
        <result javaType="java.lang.String"  property="hotelAddress" column="HOTEL_ADDRESS" />
    </resultMap>

    <sql id="select">
        SELECT
        <include refid="common.content.select" />
        , HOTEL_ID
        , NATION_CODE
        , AREA_CODE
        , USE_YN
        , HOTEL_NAME
        , HOTEL_CLASS
        , HOTEL_URL
        , HOTEL_CONTACT
        , HOTEL_ADDRESS
        FROM HOTEL T
    </sql>

    <sql id="where">
        <where>
            <if test="hotelId != null">AND HOTEL_ID = #{hotelId}</if>
            <if test="useYn != null">AND USE_YN = #{useYn}</if>
            <if test="areaCode != null">AND AREA_CODE = #{areaCode}</if>
            <if test="nationCode != null">AND NATION_CODE = #{nationCode}</if>
            <if test="hotelName != null">AND HOTEL_NAME LIKE CONCAT(#{hotelName}, '%')</if>
        </where>
    </sql>

    <select id="exists" resultType="java.lang.Boolean">
        <include refid="common.base.existsPrefix" />
        <include refid="select" />
        <include refid="where" />
        <include refid="common.base.existsSuffix" />
    </select>

    <select id="findById" resultMap="resultMap">
        <include refid="select" />
        WHERE HOTEL_ID = #{hotelId}
    </select>

    <select id="findAll" resultMap="resultMap">
        <include refid="select" />
        <include refid="where" />
    </select>

    <select id="findPage" resultMap="resultMap">
        <include refid="select" />
        <include refid="where" />
        <include refid="common.base.pagination" />
    </select>

    <insert id="save">
        <selectKey keyProperty="hotelId" resultType="java.lang.Long" order="BEFORE" keyColumn="hotelId">
            SELECT IFNULL(#{hotelId }, (SELECT IFNULL((SELECT MAX(HOTEL_ID) AS MX_ID FROM HOTEL), 0) + 1)) AS HOTEL_ID
        </selectKey>
        INSERT INTO HOTEL (
        <include refid="common.content.column" />
        , HOTEL_ID
        , NATION_CODE
        , AREA_CODE
        , USE_YN
        , HOTEL_NAME
        , HOTEL_CLASS
        , HOTEL_URL
        , HOTEL_CONTACT
        , HOTEL_ADDRESS
        ) VALUES (
        <include refid="common.content.value" />
        , #{hotelId }
        , #{nationCode }
        , #{areaCode }
        , #{useYn }
        , #{hotelName }
        , #{hotelClass }
        , #{hotelUrl }
        , #{hotelContact }
        , #{hotelAddress }
        )
        <include refid="common.content.duplicateUpdate" />
        , USE_YN = VALUES(USE_YN)
        , HOTEL_NAME = VALUES(HOTEL_NAME)
        , HOTEL_CLASS = VALUES(HOTEL_CLASS)
        , HOTEL_URL = VALUES(HOTEL_URL)
        , HOTEL_CONTACT = VALUES(HOTEL_CONTACT)
        , HOTEL_ADDRESS = VALUES(HOTEL_ADDRESS)
    </insert>

    <delete id="delete">
        DELETE FROM HOTEL
        WHERE HOTEL_ID = #{hotelId }
    </delete>

</mapper>