<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.utour.mapper.QnaMapper">

    <resultMap id="resultMap" type="com.utour.entity.Qna" extends="common.content.resultMap">
        <result property="qnaId" javaType="java.lang.Long" column="QNA_ID" />
        <result property="privateYn" javaType="java.lang.Character" column="PRIVATE_YN" />
        <result property="password" javaType="java.lang.String" column="PASSWORD" />
        <result property="password" javaType="java.lang.String" column="PASSWORD" />
        <result javaType="java.lang.Integer" property="pv" column="PV" />
    </resultMap>

    <sql id="select">
        SELECT
          QNA_ID
        , PRIVATE_YN
        , PASSWORD
        , PV
        <include refid="common.content.select" />
        FROM QNA T
    </sql>

    <sql id="where">
        <where>
            <if test="qnaId != null">AND QNA_ID = #{qnaId}</if>
            <if test="privateYn != null">AND PRIVATE_YN = #{privateYn}</if>
        </where>
    </sql>

    <select id="exists" resultType="java.lang.Boolean">
        <include refid="common.base.existsPrefix" />
        <include refid="select" />
        <include refid="where" />
        <include refid="common.base.existsSuffix" />
    </select>

    <select id="findById" resultMap="resultMap">
        <include refid="select" />
        WHERE QNA_ID = #{qnaId}
    </select>

    <select id="findAll" resultMap="resultMap">
        <include refid="select" />
        <include refid="where" />
    </select>

    <select id="findPage" resultMap="resultMap">
        <include refid="select" />
        <include refid="where" />
        ORDER BY QNA_ID DESC
        <include refid="common.base.pagination" />
    </select>

    <insert id="save">
        INSERT INTO QNA (
          QNA_ID
        , PRIVATE_YN
        , PASSWORD
        , PV
        <include refid="common.content.column" />
        ) VALUES (
          #{qnaId}
        , #{privateYn}
        , #{password}
        , #{pv}
        <include refid="common.content.value" />
        )
        <include refid="common.content.duplicateUpdate" />
        , PRIVATE_YN = VALUES(PRIVATE_YN)
        , PV = VALUES(PV)
        <if test="password != null">, PASSWORD = VALUES(PASSWORD)</if>
    </insert>

    <delete id="delete">
        DELETE FROM QNA
        WHERE QNA_ID = #{qnaId}
    </delete>

</mapper>